# .github/workflows/deploy.yml
name: Deploy MANIKANDARAJ.COM to AWS

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [theme-updated, content-updated]
  workflow_dispatch: # Allow manual trigger

env:
  HUGO_VERSION: 0.128.0
  AWS_REGION: us-east-1
  S3_BUCKET: manikandaraj.com

jobs:
  deploy-manikandaraj:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout MANIKANDARAJ.COM repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    
    - name: Update MANIKANDARAJ.COM submodules to latest
      run: |
        git submodule update --remote --recursive
        git config --global user.email "action@github.com"
        git config --global user.name "MANIKANDARAJ.COM GitHub Action"
        if [ -n "$(git status --porcelain)" ]; then
          git add .
          git commit -m "Update MANIKANDARAJ.COM submodules to latest [skip ci]" || echo "No changes to commit"
          git push origin main || echo "No changes to push"
        fi
    
    - name: Setup Hugo for MANIKANDARAJ.COM
      uses: peaceiris/actions-hugo@v3
      with:
        hugo-version: ${{ env.HUGO_VERSION }}
        extended: true
    
    - name: Setup Node.js (for MANIKANDARAJ.COM theme dependencies)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'themes/mango/package-lock.json'
      
    - name: Install MANIKANDARAJ.COM theme dependencies
      run: |
        if [ -f "themes/mango/package.json" ]; then
          cd themes/mango
          npm ci
          cd ../..
        fi
    
    - name: Build MANIKANDARAJ.COM Hugo site
      run: hugo --minify
    
    - name: Configure MANIKANDARAJ.COM AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Deploy MANIKANDARAJ.COM to S3
      run: |
        aws s3 sync ./public/ s3://${{ env.S3_BUCKET }} --delete --cache-control "public, max-age=3600"
        echo "‚úÖ MANIKANDARAJ.COM deployed to S3 bucket: ${{ env.S3_BUCKET }}"
    
    - name: Invalidate MANIKANDARAJ.COM CloudFront cache
      run: |
        DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Origins.Items[0].DomainName=='${{ env.S3_BUCKET }}.s3.amazonaws.com'].Id" --output text)
        if [ -n "$DISTRIBUTION_ID" ]; then
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
          echo "‚úÖ MANIKANDARAJ.COM CloudFront cache invalidated for distribution: $DISTRIBUTION_ID"
        else
          echo "‚ö†Ô∏è  MANIKANDARAJ.COM CloudFront distribution not found for bucket: ${{ env.S3_BUCKET }}"
        fi
    
    - name: MANIKANDARAJ.COM Deployment Summary
      run: |
        echo "üöÄ MANIKANDARAJ.COM deployment completed successfully!"
        echo "üì¶ MANIKANDARAJ.COM deployed to: https://${{ env.S3_BUCKET }}"
        echo "‚è∞ Deployed at: $(date)"
        echo "üìù Commit: ${{ github.sha }}"
        echo "üè∑Ô∏è Resource: RESOURCE_BIND=MANIKANDARAJ.COM"